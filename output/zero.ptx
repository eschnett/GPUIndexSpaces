// PTX CompilerJob of kernel runsteps(CuDeviceVector{Int32, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Int32, 1}, CuDeviceVector{Int32, 1}) for sm_80, maxregs=32

//
// Generated by LLVM NVPTX Back-End
//

.version 7.0
.target sm_80
.address_size 64

        // .globl       _Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE
                                        // @_Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE(
        .param .align 8 .b8 _Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE_param_0[24],
        .param .align 8 .b8 _Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE_param_1[24],
        .param .align 8 .b8 _Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE_param_2[24],
        .param .align 8 .b8 _Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE_param_3[24],
        .param .align 8 .b8 _Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE_param_4[24]
)
.maxnreg 32
{
        .reg .b32       %r<10>;
        .reg .b64       %rd<11>;

// %bb.0:                               // %entry
        ld.param.u64    %rd1, [_Z19julia_runsteps_495213CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
        mov.u32         %r1, %tid.y;
        mov.u32         %r2, %tid.x;
        shl.b32         %r3, %r2, 4;
        and.b32         %r4, %r3, 256;
        shl.b32         %r5, %r2, 9;
        and.b32         %r6, %r5, 1536;
        add.s32         %r7, %r4, %r1;
        add.s32         %r8, %r7, %r6;
        mul.wide.u32    %rd2, %r8, 4;
        add.s64         %rd3, %rd1, %rd2;
        mov.u32         %r9, 0;
        st.global.u32   [%rd3], %r9;
        cvt.u64.u32     %rd4, %r6;
        cvt.u64.u32     %rd5, %r4;
        cvt.u64.u32     %rd6, %r1;
        add.s64         %rd7, %rd6, %rd5;
        add.s64         %rd8, %rd7, %rd4;
        shl.b64         %rd9, %rd8, 2;
        add.s64         %rd10, %rd1, %rd9;
        st.global.u32   [%rd10+512], %r9;
        st.global.u32   [%rd10+8192], %r9;
        st.global.u32   [%rd10+8704], %r9;
        ret;
                                        // -- End function
}

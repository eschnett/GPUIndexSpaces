// PTX CompilerJob of kernel runsteps(CuDeviceVector{Int16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int8x4, 1}, CuDeviceVector{Int8x4, 1}, CuDeviceVector{Int8x4, 1}, CuDeviceVector{Float32, 1}) for sm_80, blocks_per_sm=1, maxregs=64

//
// Generated by LLVM NVPTX Back-End
//

.version 7.0
.target sm_80
.address_size 64

	// .globl	_Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE // -- Begin function _Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE
.extern .func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
;
.extern .func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
;
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE
.visible .entry _Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE(
	.param .align 8 .b8 _Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_1[24],
	.param .align 8 .b8 _Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_2[24],
	.param .align 8 .b8 _Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_3[24],
	.param .align 8 .b8 _Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_4[24],
	.param .align 8 .b8 _Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_5[24],
	.param .align 8 .b8 _Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_6[24]
)
.minnctapersm 1
.maxnreg 64
{
	.reg .pred 	%p<44>;
	.reg .f32 	%f<126>;
	.reg .b32 	%r<648>;
	.reg .b64 	%rd<137>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd21, [_Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r50, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r50, 5119;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L15
	// begin inline asm
	mov.u32 %r51, %dynamic_smem_size;
	// end inline asm
	setp.lt.u32 	%p2, %r51, 24576;
	@%p2 bra 	LBB0_14;
// %bb.3:                               // %L50.preheader
	ld.param.u64 	%rd1, [_Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_1];
	ld.param.u64 	%rd2, [_Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_2];
	ld.param.u64 	%rd3, [_Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_3];
	ld.param.u64 	%rd4, [_Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_4];
	ld.param.u64 	%rd5, [_Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_5];
	ld.param.u64 	%rd6, [_Z19julia_runsteps_944713CuDeviceArrayI7Int16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_I6Int8x4Li1ELi1EES_IS2_Li1ELi1EES_IS2_Li1ELi1EES_I7Float32Li1ELi1EE_param_6];
	mov.u32 	%r53, %ctaid.x;
	shl.b32 	%r1, %r53, 14;
	mov.u32 	%r54, %tid.y;
	shl.b32 	%r55, %r54, 5;
	mov.u32 	%r2, %tid.x;
	and.b32  	%r56, %r54, 3;
	and.b32  	%r57, %r54, 28;
	shr.u32 	%r58, %r2, 2;
	bfe.u32 	%r59, %r2, 2, 2;
	or.b32  	%r60, %r59, %r57;
	shr.u32 	%r61, %r2, 3;
	and.b32  	%r62, %r61, 2;
	shl.b32 	%r63, %r2, 2;
	and.b32  	%r64, %r63, 12;
	or.b32  	%r65, %r64, %r62;
	mul.lo.s32 	%r66, %r60, 5;
	mul.lo.s32 	%r67, %r65, 160;
	cvt.u64.u32 	%rd26, %r67;
	cvt.u64.u32 	%rd27, %r66;
	cvt.u64.u32 	%rd28, %r56;
	add.s64 	%rd29, %rd28, %rd27;
	add.s64 	%rd30, %rd29, %rd26;
	shl.b64 	%rd31, %rd30, 2;
	mov.u64 	%rd32, shmem;
	add.s64 	%rd33, %rd31, %rd32;
	add.s64 	%rd7, %rd33, -4;
	add.s32 	%r68, %r67, 160;
	cvt.u64.u32 	%rd34, %r68;
	add.s64 	%rd35, %rd29, %rd34;
	shl.b64 	%rd36, %rd35, 2;
	add.s64 	%rd37, %rd36, %rd32;
	add.s64 	%rd8, %rd37, -4;
	add.s32 	%r69, %r67, 2560;
	cvt.u64.u32 	%rd38, %r69;
	add.s64 	%rd39, %rd29, %rd38;
	shl.b64 	%rd40, %rd39, 2;
	add.s64 	%rd41, %rd40, %rd32;
	add.s64 	%rd9, %rd41, -4;
	add.s32 	%r70, %r67, 2720;
	cvt.u64.u32 	%rd42, %r70;
	add.s64 	%rd43, %rd29, %rd42;
	shl.b64 	%rd44, %rd43, 2;
	add.s64 	%rd45, %rd44, %rd32;
	add.s64 	%rd10, %rd45, -4;
	shl.b32 	%r3, %r53, 8;
	shl.b32 	%r71, %r54, 13;
	or.b32  	%r72, %r71, %r55;
	and.b32  	%r4, %r72, 196832;
	add.s32 	%r5, %r55, %r2;
	mul.wide.u32 	%rd46, %r5, 4;
	add.s64 	%rd11, %rd1, %rd46;
	bfe.u32 	%r73, %r54, 3, 2;
	add.s32 	%r74, %r73, 1;
	cvt.u64.u32 	%rd12, %r74;
	and.b32  	%r6, %r2, 16;
	add.s64 	%rd13, %rd3, %rd46;
	cvt.u64.u32 	%rd47, %r55;
	cvt.u64.u32 	%rd48, %r2;
	add.s64 	%rd49, %rd48, %rd47;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd14, %rd3, %rd50;
	and.b32  	%r7, %r2, 8;
	bfe.u32 	%r8, %r54, 2, 3;
	shl.b32 	%r75, %r54, 2;
	and.b32  	%r9, %r75, 12;
	bfe.u32 	%r10, %r2, 1, 1;
	shl.b32 	%r76, %r2, 1;
	and.b32  	%r11, %r76, 2;
	and.b32  	%r12, %r63, 112;
	and.b32  	%r13, %r2, 3;
	shl.b32 	%r14, %r54, 4;
	bfe.u32 	%r15, %r2, 4, 1;
	and.b32  	%r16, %r58, 2;
	and.b32  	%r17, %r2, 4;
	and.b32  	%r18, %r2, 2;
	and.b32  	%r19, %r2, 1;
	mul.wide.u32 	%rd51, %r2, 4;
	add.s64 	%rd52, %rd51, 256;
	add.s64 	%rd15, %rd4, %rd52;
	or.b32  	%r77, %r2, %r1;
	add.s32 	%r642, %r77, %r55;
	add.s64 	%rd16, %rd5, %rd52;
	mov.u32 	%r52, 0;
	setp.eq.s32 	%p3, %r7, 0;
	setp.eq.s32 	%p4, %r6, 0;
	setp.eq.s32 	%p38, %r19, 0;
	setp.eq.s32 	%p39, %r18, 0;
	mov.u32 	%r643, %r52;
LBB0_4:                                 // %L50
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_5 Depth 2
                                        //       Child Loop BB0_6 Depth 3
                                        //       Child Loop BB0_8 Depth 3
                                        //         Child Loop BB0_9 Depth 4
	shl.b32 	%r79, %r643, 21;
	add.s32 	%r80, %r79, %r1;
	add.s32 	%r81, %r5, %r80;
	mul.wide.s32 	%rd53, %r81, 4;
	add.s64 	%rd54, %rd6, %rd53;
	st.global.u32 	[%rd54], %r52;
	or.b32  	%r82, %r79, 4096;
	add.s32 	%r83, %r82, %r1;
	add.s32 	%r84, %r5, %r83;
	mul.wide.s32 	%rd55, %r84, 4;
	add.s64 	%rd56, %rd6, %rd55;
	st.global.u32 	[%rd56], %r52;
	or.b32  	%r85, %r79, 8192;
	add.s32 	%r86, %r85, %r1;
	add.s32 	%r87, %r5, %r86;
	mul.wide.s32 	%rd57, %r87, 4;
	add.s64 	%rd58, %rd6, %rd57;
	st.global.u32 	[%rd58], %r52;
	or.b32  	%r88, %r79, 1024;
	add.s32 	%r89, %r88, %r1;
	add.s32 	%r90, %r5, %r89;
	mul.wide.s32 	%rd59, %r90, 4;
	add.s64 	%rd60, %rd6, %rd59;
	st.global.u32 	[%rd60], %r52;
	or.b32  	%r91, %r79, 5120;
	add.s32 	%r92, %r91, %r1;
	add.s32 	%r93, %r5, %r92;
	mul.wide.s32 	%rd61, %r93, 4;
	add.s64 	%rd62, %rd6, %rd61;
	st.global.u32 	[%rd62], %r52;
	or.b32  	%r94, %r79, 9216;
	add.s32 	%r95, %r94, %r1;
	add.s32 	%r96, %r5, %r95;
	mul.wide.s32 	%rd63, %r96, 4;
	add.s64 	%rd64, %rd6, %rd63;
	st.global.u32 	[%rd64], %r52;
	or.b32  	%r97, %r79, 2048;
	add.s32 	%r98, %r97, %r1;
	add.s32 	%r99, %r5, %r98;
	mul.wide.s32 	%rd65, %r99, 4;
	add.s64 	%rd66, %rd6, %rd65;
	st.global.u32 	[%rd66], %r52;
	or.b32  	%r100, %r79, 6144;
	add.s32 	%r101, %r100, %r1;
	add.s32 	%r102, %r5, %r101;
	mul.wide.s32 	%rd67, %r102, 4;
	add.s64 	%rd68, %rd6, %rd67;
	st.global.u32 	[%rd68], %r52;
	or.b32  	%r103, %r79, 10240;
	add.s32 	%r104, %r103, %r1;
	add.s32 	%r105, %r5, %r104;
	mul.wide.s32 	%rd69, %r105, 4;
	add.s64 	%rd70, %rd6, %rd69;
	st.global.u32 	[%rd70], %r52;
	shl.b32 	%r23, %r643, 22;
	mov.u32 	%r644, %r52;
LBB0_5:                                 // %L155
                                        //   Parent Loop BB0_4 Depth=1
                                        // =>  This Loop Header: Depth=2
                                        //       Child Loop BB0_6 Depth 3
                                        //       Child Loop BB0_8 Depth 3
                                        //         Child Loop BB0_9 Depth 4
	st.shared.u32 	[%rd7+4], %r52;
	st.shared.u32 	[%rd8+4], %r52;
	st.shared.u32 	[%rd9+4], %r52;
	st.shared.u32 	[%rd10+4], %r52;
	shl.b32 	%r163, %r644, 18;
	add.s32 	%r164, %r163, %r23;
	add.s32 	%r165, %r164, %r3;
	add.s32 	%r166, %r165, %r2;
	add.s32 	%r167, %r166, %r4;
	mul.wide.s32 	%rd72, %r167, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.u32 	%r168, [%rd73];
	ld.global.u32 	%r169, [%rd73+131072];
	mov.u32 	%r170, 21520;
	prmt.b32 	%r171, %r168, %r169, %r170;
	mov.u32 	%r172, 30258;
	prmt.b32 	%r173, %r168, %r169, %r172;
	ld.global.u32 	%r174, [%rd11];
	cvt.s32.s16 	%r175, %r174;
	shr.s32 	%r176, %r174, 16;
	mul.lo.s32 	%r177, %r175, 5;
	cvt.s64.s32 	%rd74, %r177;
	add.s64 	%rd75, %rd74, %rd12;
	shl.b64 	%rd76, %rd75, 2;
	add.s64 	%rd78, %rd32, %rd76;
	st.shared.u32 	[%rd78+-4], %r171;
	mul.lo.s32 	%r178, %r176, 5;
	cvt.s64.s32 	%rd79, %r178;
	add.s64 	%rd80, %rd79, %rd12;
	shl.b64 	%rd81, %rd80, 2;
	add.s64 	%rd82, %rd32, %rd81;
	st.shared.u32 	[%rd82+-4], %r173;
	bar.sync 	0;
	ld.shared.u32 	%r179, [%rd7+4];
	ld.shared.u32 	%r180, [%rd8+4];
	ld.shared.u32 	%r181, [%rd9+4];
	ld.shared.u32 	%r182, [%rd10+4];
	mov.u32 	%r183, 25632;
	prmt.b32 	%r184, %r179, %r180, %r183;
	mov.u32 	%r185, 30001;
	prmt.b32 	%r186, %r179, %r180, %r185;
	prmt.b32 	%r187, %r181, %r182, %r183;
	prmt.b32 	%r188, %r181, %r182, %r185;
	selp.b32 	%r189, %r186, %r184, %p4;
	shfl.sync.bfly.b32	%r190, %r189, 16, 31, -1;
	selp.b32 	%r191, %r190, %r186, %p4;
	selp.b32 	%r192, %r184, %r190, %p4;
	selp.b32 	%r193, %r188, %r187, %p4;
	shfl.sync.bfly.b32	%r194, %r193, 16, 31, -1;
	selp.b32 	%r195, %r194, %r188, %p4;
	selp.b32 	%r196, %r187, %r194, %p4;
	prmt.b32 	%r197, %r192, %r191, %r170;
	prmt.b32 	%r198, %r192, %r191, %r172;
	prmt.b32 	%r199, %r196, %r195, %r170;
	prmt.b32 	%r200, %r196, %r195, %r172;
	xor.b32  	%r201, %r197, -2004318072;
	and.b32  	%r202, %r201, 252645135;
	add.s32 	%r203, %r202, 2021161080;
	xor.b32  	%r204, %r203, -2139062144;
	shr.u32 	%r205, %r201, 4;
	and.b32  	%r206, %r205, 252645135;
	add.s32 	%r207, %r206, 2021161080;
	xor.b32  	%r208, %r207, -2139062144;
	xor.b32  	%r209, %r198, -2004318072;
	and.b32  	%r210, %r209, 252645135;
	add.s32 	%r211, %r210, 2021161080;
	xor.b32  	%r212, %r211, -2139062144;
	shr.u32 	%r213, %r209, 4;
	and.b32  	%r214, %r213, 252645135;
	add.s32 	%r215, %r214, 2021161080;
	xor.b32  	%r216, %r215, -2139062144;
	xor.b32  	%r217, %r199, -2004318072;
	and.b32  	%r218, %r217, 252645135;
	add.s32 	%r219, %r218, 2021161080;
	xor.b32  	%r220, %r219, -2139062144;
	shr.u32 	%r221, %r217, 4;
	and.b32  	%r222, %r221, 252645135;
	add.s32 	%r223, %r222, 2021161080;
	xor.b32  	%r224, %r223, -2139062144;
	xor.b32  	%r225, %r200, -2004318072;
	and.b32  	%r226, %r225, 252645135;
	add.s32 	%r227, %r226, 2021161080;
	xor.b32  	%r228, %r227, -2139062144;
	shr.u32 	%r229, %r225, 4;
	and.b32  	%r230, %r229, 252645135;
	add.s32 	%r231, %r230, 2021161080;
	xor.b32  	%r232, %r231, -2139062144;
	ld.global.u32 	%r233, [%rd13];
	ld.global.u32 	%r234, [%rd14+256];
	ld.global.u32 	%r235, [%rd14+128];
	ld.global.u32 	%r236, [%rd14+384];
	prmt.b32 	%r237, %r233, %r52, %r52;
	mov.u32 	%r238, 4369;
	prmt.b32 	%r239, %r233, %r52, %r238;
	mov.u32 	%r240, 8738;
	prmt.b32 	%r241, %r233, %r52, %r240;
	mov.u32 	%r242, 13107;
	prmt.b32 	%r243, %r233, %r52, %r242;
	prmt.b32 	%r244, %r234, %r52, %r52;
	prmt.b32 	%r245, %r234, %r52, %r238;
	prmt.b32 	%r246, %r234, %r52, %r240;
	prmt.b32 	%r247, %r234, %r52, %r242;
	prmt.b32 	%r248, %r235, %r52, %r52;
	prmt.b32 	%r249, %r235, %r52, %r238;
	prmt.b32 	%r250, %r235, %r52, %r240;
	prmt.b32 	%r251, %r235, %r52, %r242;
	prmt.b32 	%r252, %r236, %r52, %r52;
	prmt.b32 	%r253, %r236, %r52, %r238;
	prmt.b32 	%r254, %r236, %r52, %r240;
	prmt.b32 	%r255, %r236, %r52, %r242;
	prmt.b32 	%r256, %r204, %r52, %r52;
	prmt.b32 	%r257, %r204, %r52, %r238;
	prmt.b32 	%r258, %r204, %r52, %r240;
	prmt.b32 	%r259, %r204, %r52, %r242;
	prmt.b32 	%r260, %r212, %r52, %r52;
	prmt.b32 	%r261, %r212, %r52, %r238;
	prmt.b32 	%r262, %r212, %r52, %r240;
	prmt.b32 	%r263, %r212, %r52, %r242;
	prmt.b32 	%r264, %r220, %r52, %r52;
	prmt.b32 	%r265, %r220, %r52, %r238;
	prmt.b32 	%r266, %r220, %r52, %r240;
	prmt.b32 	%r267, %r220, %r52, %r242;
	prmt.b32 	%r268, %r228, %r52, %r52;
	prmt.b32 	%r269, %r228, %r52, %r238;
	prmt.b32 	%r270, %r228, %r52, %r240;
	prmt.b32 	%r271, %r228, %r52, %r242;
	prmt.b32 	%r272, %r208, %r52, %r52;
	prmt.b32 	%r273, %r208, %r52, %r238;
	prmt.b32 	%r274, %r208, %r52, %r240;
	prmt.b32 	%r275, %r208, %r52, %r242;
	prmt.b32 	%r276, %r216, %r52, %r52;
	prmt.b32 	%r277, %r216, %r52, %r238;
	prmt.b32 	%r278, %r216, %r52, %r240;
	prmt.b32 	%r279, %r216, %r52, %r242;
	prmt.b32 	%r280, %r224, %r52, %r52;
	prmt.b32 	%r281, %r224, %r52, %r238;
	prmt.b32 	%r282, %r224, %r52, %r240;
	prmt.b32 	%r283, %r224, %r52, %r242;
	prmt.b32 	%r284, %r232, %r52, %r52;
	prmt.b32 	%r285, %r232, %r52, %r238;
	prmt.b32 	%r286, %r232, %r52, %r240;
	prmt.b32 	%r287, %r232, %r52, %r242;
	mul.lo.s32 	%r288, %r256, %r237;
	mul.lo.s32 	%r289, %r272, %r248;
	sub.s32 	%r290, %r288, %r289;
	shr.s32 	%r111, %r290, 4;
	mul.lo.s32 	%r291, %r260, %r237;
	mul.lo.s32 	%r292, %r276, %r248;
	sub.s32 	%r293, %r291, %r292;
	shr.s32 	%r118, %r293, 4;
	mul.lo.s32 	%r294, %r264, %r244;
	mul.lo.s32 	%r295, %r280, %r252;
	sub.s32 	%r296, %r294, %r295;
	shr.s32 	%r125, %r296, 4;
	mul.lo.s32 	%r297, %r268, %r244;
	mul.lo.s32 	%r298, %r284, %r252;
	sub.s32 	%r299, %r297, %r298;
	shr.s32 	%r132, %r299, 4;
	mul.lo.s32 	%r300, %r257, %r239;
	mul.lo.s32 	%r301, %r273, %r249;
	sub.s32 	%r302, %r300, %r301;
	shr.s32 	%r110, %r302, 4;
	mul.lo.s32 	%r303, %r261, %r239;
	mul.lo.s32 	%r304, %r277, %r249;
	sub.s32 	%r305, %r303, %r304;
	shr.s32 	%r117, %r305, 4;
	mul.lo.s32 	%r306, %r265, %r245;
	mul.lo.s32 	%r307, %r281, %r253;
	sub.s32 	%r308, %r306, %r307;
	shr.s32 	%r124, %r308, 4;
	mul.lo.s32 	%r309, %r269, %r245;
	mul.lo.s32 	%r310, %r285, %r253;
	sub.s32 	%r311, %r309, %r310;
	shr.s32 	%r131, %r311, 4;
	mul.lo.s32 	%r312, %r258, %r241;
	mul.lo.s32 	%r313, %r274, %r250;
	sub.s32 	%r314, %r312, %r313;
	shr.s32 	%r108, %r314, 4;
	mul.lo.s32 	%r315, %r262, %r241;
	mul.lo.s32 	%r316, %r278, %r250;
	sub.s32 	%r317, %r315, %r316;
	shr.s32 	%r115, %r317, 4;
	mul.lo.s32 	%r318, %r266, %r246;
	mul.lo.s32 	%r319, %r282, %r254;
	sub.s32 	%r320, %r318, %r319;
	shr.s32 	%r122, %r320, 4;
	mul.lo.s32 	%r321, %r270, %r246;
	mul.lo.s32 	%r322, %r286, %r254;
	sub.s32 	%r323, %r321, %r322;
	shr.s32 	%r129, %r323, 4;
	mul.lo.s32 	%r324, %r259, %r243;
	mul.lo.s32 	%r325, %r275, %r251;
	sub.s32 	%r326, %r324, %r325;
	shr.s32 	%r107, %r326, 4;
	mul.lo.s32 	%r327, %r263, %r243;
	mul.lo.s32 	%r328, %r279, %r251;
	sub.s32 	%r329, %r327, %r328;
	shr.s32 	%r114, %r329, 4;
	mul.lo.s32 	%r330, %r267, %r247;
	mul.lo.s32 	%r331, %r283, %r255;
	sub.s32 	%r332, %r330, %r331;
	shr.s32 	%r121, %r332, 4;
	mul.lo.s32 	%r333, %r271, %r247;
	mul.lo.s32 	%r334, %r287, %r255;
	sub.s32 	%r335, %r333, %r334;
	shr.s32 	%r128, %r335, 4;
	mul.lo.s32 	%r336, %r256, %r248;
	mad.lo.s32 	%r337, %r272, %r237, %r336;
	shr.s32 	%r139, %r337, 4;
	mul.lo.s32 	%r338, %r260, %r248;
	mad.lo.s32 	%r339, %r276, %r237, %r338;
	shr.s32 	%r146, %r339, 4;
	mul.lo.s32 	%r340, %r264, %r252;
	mad.lo.s32 	%r341, %r280, %r244, %r340;
	shr.s32 	%r153, %r341, 4;
	mul.lo.s32 	%r342, %r268, %r252;
	mad.lo.s32 	%r343, %r284, %r244, %r342;
	shr.s32 	%r160, %r343, 4;
	mul.lo.s32 	%r344, %r257, %r249;
	mad.lo.s32 	%r345, %r273, %r239, %r344;
	shr.s32 	%r138, %r345, 4;
	mul.lo.s32 	%r346, %r261, %r249;
	mad.lo.s32 	%r347, %r277, %r239, %r346;
	shr.s32 	%r145, %r347, 4;
	mul.lo.s32 	%r348, %r265, %r253;
	mad.lo.s32 	%r349, %r281, %r245, %r348;
	shr.s32 	%r152, %r349, 4;
	mul.lo.s32 	%r350, %r269, %r253;
	mad.lo.s32 	%r351, %r285, %r245, %r350;
	shr.s32 	%r159, %r351, 4;
	mul.lo.s32 	%r352, %r258, %r250;
	mad.lo.s32 	%r353, %r274, %r241, %r352;
	shr.s32 	%r136, %r353, 4;
	mul.lo.s32 	%r354, %r262, %r250;
	mad.lo.s32 	%r355, %r278, %r241, %r354;
	shr.s32 	%r143, %r355, 4;
	mul.lo.s32 	%r356, %r266, %r254;
	mad.lo.s32 	%r357, %r282, %r246, %r356;
	shr.s32 	%r150, %r357, 4;
	mul.lo.s32 	%r358, %r270, %r254;
	mad.lo.s32 	%r359, %r286, %r246, %r358;
	shr.s32 	%r157, %r359, 4;
	mul.lo.s32 	%r360, %r259, %r251;
	mad.lo.s32 	%r361, %r275, %r243, %r360;
	shr.s32 	%r135, %r361, 4;
	mul.lo.s32 	%r362, %r263, %r251;
	mad.lo.s32 	%r363, %r279, %r243, %r362;
	shr.s32 	%r142, %r363, 4;
	mul.lo.s32 	%r364, %r267, %r255;
	mad.lo.s32 	%r365, %r283, %r247, %r364;
	shr.s32 	%r149, %r365, 4;
	mul.lo.s32 	%r366, %r271, %r255;
	mad.lo.s32 	%r367, %r287, %r247, %r366;
	shr.s32 	%r156, %r367, 4;
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r112, %r107, %r108, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r109, %r110, %r111, %r112;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r119, %r114, %r115, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r116, %r117, %r118, %r119;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r126, %r121, %r122, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r123, %r124, %r125, %r126;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r133, %r128, %r129, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r130, %r131, %r132, %r133;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r140, %r135, %r136, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r137, %r138, %r139, %r140;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r147, %r142, %r143, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r144, %r145, %r146, %r147;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r154, %r149, %r150, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r151, %r152, %r153, %r154;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r161, %r156, %r157, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r158, %r159, %r160, %r161;
	// end inline asm
	selp.b32 	%r368, %r130, %r123, %p3;
	shfl.sync.bfly.b32	%r369, %r368, 8, 31, -1;
	selp.b32 	%r370, %r369, %r130, %p3;
	selp.b32 	%r371, %r123, %r369, %p3;
	selp.b32 	%r372, %r116, %r109, %p3;
	shfl.sync.bfly.b32	%r373, %r372, 8, 31, -1;
	selp.b32 	%r374, %r373, %r116, %p3;
	selp.b32 	%r375, %r109, %r373, %p3;
	selp.b32 	%r376, %r158, %r151, %p3;
	shfl.sync.bfly.b32	%r377, %r376, 8, 31, -1;
	selp.b32 	%r378, %r377, %r158, %p3;
	selp.b32 	%r379, %r151, %r377, %p3;
	selp.b32 	%r380, %r144, %r137, %p3;
	shfl.sync.bfly.b32	%r381, %r380, 8, 31, -1;
	selp.b32 	%r382, %r381, %r144, %p3;
	selp.b32 	%r383, %r137, %r381, %p3;
	add.s32 	%r25, %r379, %r371;
	sub.s32 	%r26, %r371, %r379;
	add.s32 	%r27, %r378, %r370;
	sub.s32 	%r28, %r370, %r378;
	add.s32 	%r29, %r383, %r375;
	sub.s32 	%r30, %r375, %r383;
	add.s32 	%r31, %r382, %r374;
	sub.s32 	%r32, %r374, %r382;
	mov.u64 	%rd135, 0;
LBB0_6:                                 // %L2016
                                        //   Parent Loop BB0_4 Depth=1
                                        //     Parent Loop BB0_5 Depth=2
                                        // =>    This Inner Loop Header: Depth=3
	add.s64 	%rd83, %rd15, %rd135;
	ld.global.u32 	%r440, [%rd83+-256];
	ld.global.u32 	%r441, [%rd83+-128];
	ld.global.u32 	%r442, [%rd83];
	ld.global.u32 	%r443, [%rd83+128];
	mov.u32 	%r444, 0;
	wmma.mma.sync.aligned.row.col.m16n16k16.s32.s8.s8.s32
		{%r445, %r446, %r447, %r448, %r449, %r450, %r451, %r452},
		{%r440, %r441},
		{%r25, %r27},
		{%r444, %r444, %r444, %r444, %r444, %r444, %r444, %r444};
	wmma.mma.sync.aligned.row.col.m16n16k16.s32.s8.s8.s32
		{%r453, %r454, %r455, %r456, %r457, %r458, %r459, %r460},
		{%r440, %r441},
		{%r29, %r31},
		{%r444, %r444, %r444, %r444, %r444, %r444, %r444, %r444};
	wmma.mma.sync.aligned.row.col.m16n16k16.s32.s8.s8.s32
		{%r461, %r462, %r463, %r464, %r465, %r466, %r467, %r468},
		{%r442, %r443},
		{%r30, %r32},
		{%r444, %r444, %r444, %r444, %r444, %r444, %r444, %r444};
	wmma.mma.sync.aligned.row.col.m16n16k16.s32.s8.s8.s32
		{%r469, %r470, %r471, %r472, %r473, %r474, %r475, %r476},
		{%r442, %r443},
		{%r26, %r28},
		{%r444, %r444, %r444, %r444, %r444, %r444, %r444, %r444};
	sub.s32 	%r477, %r445, %r461;
	add.s32 	%r478, %r461, %r445;
	sub.s32 	%r479, %r446, %r462;
	add.s32 	%r480, %r462, %r446;
	sub.s32 	%r481, %r447, %r463;
	add.s32 	%r482, %r463, %r447;
	sub.s32 	%r483, %r448, %r464;
	add.s32 	%r484, %r464, %r448;
	sub.s32 	%r485, %r449, %r465;
	add.s32 	%r486, %r465, %r449;
	sub.s32 	%r487, %r450, %r466;
	add.s32 	%r488, %r466, %r450;
	sub.s32 	%r489, %r451, %r467;
	add.s32 	%r490, %r467, %r451;
	sub.s32 	%r491, %r452, %r468;
	add.s32 	%r492, %r468, %r452;
	add.s32 	%r493, %r469, %r453;
	sub.s32 	%r494, %r453, %r469;
	add.s32 	%r495, %r470, %r454;
	sub.s32 	%r496, %r454, %r470;
	add.s32 	%r497, %r471, %r455;
	sub.s32 	%r498, %r455, %r471;
	add.s32 	%r499, %r472, %r456;
	sub.s32 	%r500, %r456, %r472;
	add.s32 	%r501, %r473, %r457;
	sub.s32 	%r502, %r457, %r473;
	add.s32 	%r503, %r474, %r458;
	sub.s32 	%r504, %r458, %r474;
	add.s32 	%r505, %r475, %r459;
	sub.s32 	%r506, %r459, %r475;
	add.s32 	%r507, %r476, %r460;
	sub.s32 	%r508, %r460, %r476;
	shr.s32 	%r509, %r477, 8;
	setp.gt.s32 	%p5, %r477, 16127;
	selp.b32 	%r510, 63, %r509, %p5;
	max.s32 	%r389, %r510, -63;
	shr.s32 	%r511, %r479, 8;
	setp.gt.s32 	%p6, %r479, 16127;
	selp.b32 	%r512, 63, %r511, %p6;
	max.s32 	%r388, %r512, -63;
	shr.s32 	%r513, %r481, 8;
	setp.gt.s32 	%p7, %r481, 16127;
	selp.b32 	%r514, 63, %r513, %p7;
	max.s32 	%r396, %r514, -63;
	shr.s32 	%r515, %r483, 8;
	setp.gt.s32 	%p8, %r483, 16127;
	selp.b32 	%r516, 63, %r515, %p8;
	max.s32 	%r395, %r516, -63;
	shr.s32 	%r517, %r485, 8;
	setp.gt.s32 	%p9, %r485, 16127;
	selp.b32 	%r518, 63, %r517, %p9;
	max.s32 	%r386, %r518, -63;
	shr.s32 	%r519, %r487, 8;
	setp.gt.s32 	%p10, %r487, 16127;
	selp.b32 	%r520, 63, %r519, %p10;
	max.s32 	%r385, %r520, -63;
	shr.s32 	%r521, %r489, 8;
	setp.gt.s32 	%p11, %r489, 16127;
	selp.b32 	%r522, 63, %r521, %p11;
	max.s32 	%r393, %r522, -63;
	shr.s32 	%r523, %r491, 8;
	setp.gt.s32 	%p12, %r491, 16127;
	selp.b32 	%r524, 63, %r523, %p12;
	max.s32 	%r392, %r524, -63;
	shr.s32 	%r525, %r478, 8;
	setp.gt.s32 	%p13, %r478, 16127;
	selp.b32 	%r526, 63, %r525, %p13;
	max.s32 	%r403, %r526, -63;
	shr.s32 	%r527, %r480, 8;
	setp.gt.s32 	%p14, %r480, 16127;
	selp.b32 	%r528, 63, %r527, %p14;
	max.s32 	%r402, %r528, -63;
	shr.s32 	%r529, %r482, 8;
	setp.gt.s32 	%p15, %r482, 16127;
	selp.b32 	%r530, 63, %r529, %p15;
	max.s32 	%r410, %r530, -63;
	shr.s32 	%r531, %r484, 8;
	setp.gt.s32 	%p16, %r484, 16127;
	selp.b32 	%r532, 63, %r531, %p16;
	max.s32 	%r409, %r532, -63;
	shr.s32 	%r533, %r486, 8;
	setp.gt.s32 	%p17, %r486, 16127;
	selp.b32 	%r534, 63, %r533, %p17;
	max.s32 	%r400, %r534, -63;
	shr.s32 	%r535, %r488, 8;
	setp.gt.s32 	%p18, %r488, 16127;
	selp.b32 	%r536, 63, %r535, %p18;
	max.s32 	%r399, %r536, -63;
	shr.s32 	%r537, %r490, 8;
	setp.gt.s32 	%p19, %r490, 16127;
	selp.b32 	%r538, 63, %r537, %p19;
	max.s32 	%r407, %r538, -63;
	shr.s32 	%r539, %r492, 8;
	setp.gt.s32 	%p20, %r492, 16127;
	selp.b32 	%r540, 63, %r539, %p20;
	max.s32 	%r406, %r540, -63;
	shr.s32 	%r541, %r493, 8;
	setp.gt.s32 	%p21, %r493, 16127;
	selp.b32 	%r542, 63, %r541, %p21;
	max.s32 	%r417, %r542, -63;
	shr.s32 	%r543, %r495, 8;
	setp.gt.s32 	%p22, %r495, 16127;
	selp.b32 	%r544, 63, %r543, %p22;
	max.s32 	%r416, %r544, -63;
	shr.s32 	%r545, %r497, 8;
	setp.gt.s32 	%p23, %r497, 16127;
	selp.b32 	%r546, 63, %r545, %p23;
	max.s32 	%r424, %r546, -63;
	shr.s32 	%r547, %r499, 8;
	setp.gt.s32 	%p24, %r499, 16127;
	selp.b32 	%r548, 63, %r547, %p24;
	max.s32 	%r423, %r548, -63;
	shr.s32 	%r549, %r501, 8;
	setp.gt.s32 	%p25, %r501, 16127;
	selp.b32 	%r550, 63, %r549, %p25;
	max.s32 	%r414, %r550, -63;
	shr.s32 	%r551, %r503, 8;
	setp.gt.s32 	%p26, %r503, 16127;
	selp.b32 	%r552, 63, %r551, %p26;
	max.s32 	%r413, %r552, -63;
	shr.s32 	%r553, %r505, 8;
	setp.gt.s32 	%p27, %r505, 16127;
	selp.b32 	%r554, 63, %r553, %p27;
	max.s32 	%r421, %r554, -63;
	shr.s32 	%r555, %r507, 8;
	setp.gt.s32 	%p28, %r507, 16127;
	selp.b32 	%r556, 63, %r555, %p28;
	max.s32 	%r420, %r556, -63;
	shr.s32 	%r557, %r494, 8;
	setp.gt.s32 	%p29, %r494, 16127;
	selp.b32 	%r558, 63, %r557, %p29;
	max.s32 	%r431, %r558, -63;
	shr.s32 	%r559, %r496, 8;
	setp.gt.s32 	%p30, %r496, 16127;
	selp.b32 	%r560, 63, %r559, %p30;
	max.s32 	%r430, %r560, -63;
	shr.s32 	%r561, %r498, 8;
	setp.gt.s32 	%p31, %r498, 16127;
	selp.b32 	%r562, 63, %r561, %p31;
	max.s32 	%r438, %r562, -63;
	shr.s32 	%r563, %r500, 8;
	setp.gt.s32 	%p32, %r500, 16127;
	selp.b32 	%r564, 63, %r563, %p32;
	max.s32 	%r437, %r564, -63;
	shr.s32 	%r565, %r502, 8;
	setp.gt.s32 	%p33, %r502, 16127;
	selp.b32 	%r566, 63, %r565, %p33;
	max.s32 	%r428, %r566, -63;
	shr.s32 	%r567, %r504, 8;
	setp.gt.s32 	%p34, %r504, 16127;
	selp.b32 	%r568, 63, %r567, %p34;
	max.s32 	%r427, %r568, -63;
	shr.s32 	%r569, %r506, 8;
	setp.gt.s32 	%p35, %r506, 16127;
	selp.b32 	%r570, 63, %r569, %p35;
	max.s32 	%r435, %r570, -63;
	shr.s32 	%r571, %r508, 8;
	setp.gt.s32 	%p36, %r508, 16127;
	selp.b32 	%r572, 63, %r571, %p36;
	max.s32 	%r434, %r572, -63;
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r384, %r385, %r386, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r387, %r388, %r389, %r384;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r391, %r392, %r393, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r394, %r395, %r396, %r391;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r398, %r399, %r400, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r401, %r402, %r403, %r398;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r405, %r406, %r407, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r408, %r409, %r410, %r405;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r412, %r413, %r414, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r415, %r416, %r417, %r412;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r419, %r420, %r421, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r422, %r423, %r424, %r419;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r426, %r427, %r428, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r429, %r430, %r431, %r426;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r433, %r434, %r435, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r436, %r437, %r438, %r433;
	// end inline asm
	cvt.u32.u64 	%r573, %rd135;
	or.b32  	%r574, %r9, %r573;
	or.b32  	%r575, %r574, %r10;
	or.b32  	%r576, %r575, %r11;
	or.b32  	%r577, %r576, %r12;
	mul.wide.s32 	%rd84, %r577, 8;
	cvt.u64.u32 	%rd85, %r8;
	add.s64 	%rd86, %rd85, -1;
	add.s64 	%rd87, %rd86, %rd84;
	shl.b64 	%rd88, %rd87, 2;
	add.s64 	%rd90, %rd32, %rd88;
	st.shared.u32 	[%rd90+4], %r387;
	or.b32  	%r578, %r577, 128;
	mul.wide.s32 	%rd91, %r578, 8;
	add.s64 	%rd92, %rd86, %rd91;
	shl.b64 	%rd93, %rd92, 2;
	add.s64 	%rd94, %rd32, %rd93;
	st.shared.u32 	[%rd94+4], %r394;
	or.b32  	%r579, %r577, 256;
	mul.wide.s32 	%rd95, %r579, 8;
	add.s64 	%rd96, %rd86, %rd95;
	shl.b64 	%rd97, %rd96, 2;
	add.s64 	%rd98, %rd32, %rd97;
	st.shared.u32 	[%rd98+4], %r401;
	or.b32  	%r580, %r577, 384;
	mul.wide.s32 	%rd99, %r580, 8;
	add.s64 	%rd100, %rd86, %rd99;
	shl.b64 	%rd101, %rd100, 2;
	add.s64 	%rd102, %rd32, %rd101;
	st.shared.u32 	[%rd102+4], %r408;
	add.s64 	%rd103, %rd85, 12287;
	add.s64 	%rd104, %rd103, %rd84;
	shl.b64 	%rd105, %rd104, 2;
	add.s64 	%rd106, %rd32, %rd105;
	st.shared.u32 	[%rd106+4], %r415;
	add.s64 	%rd107, %rd103, %rd91;
	shl.b64 	%rd108, %rd107, 2;
	add.s64 	%rd109, %rd32, %rd108;
	st.shared.u32 	[%rd109+4], %r422;
	add.s64 	%rd110, %rd103, %rd95;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd112, %rd32, %rd111;
	st.shared.u32 	[%rd112+4], %r429;
	add.s64 	%rd113, %rd103, %rd99;
	shl.b64 	%rd114, %rd113, 2;
	add.s64 	%rd115, %rd32, %rd114;
	st.shared.u32 	[%rd115+4], %r436;
	add.s64 	%rd135, %rd135, 512;
	cvt.u32.u64 	%r581, %rd135;
	setp.ne.s32 	%p37, %r581, 1536;
	@%p37 bra 	LBB0_6;
// %bb.7:                               // %L3426
                                        //   in Loop: Header=BB0_5 Depth=2
	bar.sync 	0;
	mov.u32 	%r645, %r642;
	mov.u32 	%r646, %r444;
LBB0_8:                                 // %L3428
                                        //   Parent Loop BB0_4 Depth=1
                                        //     Parent Loop BB0_5 Depth=2
                                        // =>    This Loop Header: Depth=3
                                        //         Child Loop BB0_9 Depth 4
	shl.b32 	%r584, %r646, 9;
	add.s32 	%r585, %r14, %r584;
	or.b32  	%r586, %r15, %r585;
	or.b32  	%r587, %r586, %r16;
	or.b32  	%r588, %r587, %r17;
	mul.wide.u32 	%rd116, %r588, 8;
	cvt.u64.u32 	%rd117, %r13;
	or.b64  	%rd118, %rd116, %rd117;
	shl.b64 	%rd120, %rd118, 2;
	add.s64 	%rd121, %rd32, %rd120;
	ld.shared.u32 	%r589, [%rd121];
	or.b32  	%r590, %r588, 8;
	mul.wide.s32 	%rd122, %r590, 8;
	or.b64  	%rd123, %rd122, %rd117;
	shl.b64 	%rd124, %rd123, 2;
	add.s64 	%rd125, %rd32, %rd124;
	ld.shared.u32 	%r591, [%rd125];
	ld.shared.u32 	%r592, [%rd121+49152];
	ld.shared.u32 	%r593, [%rd125+49152];
	ld.shared.u32 	%r594, [%rd121+16];
	ld.shared.u32 	%r595, [%rd125+16];
	or.b64  	%rd126, %rd117, 12288;
	add.s64 	%rd127, %rd126, %rd116;
	shl.b64 	%rd128, %rd127, 2;
	add.s64 	%rd129, %rd32, %rd128;
	ld.shared.u32 	%r596, [%rd129+16];
	add.s64 	%rd130, %rd126, %rd122;
	shl.b64 	%rd131, %rd130, 2;
	add.s64 	%rd132, %rd32, %rd131;
	ld.shared.u32 	%r597, [%rd132+16];
	add.s32 	%r35, %r594, %r589;
	sub.s32 	%r36, %r589, %r594;
	add.s32 	%r37, %r595, %r591;
	sub.s32 	%r38, %r591, %r595;
	add.s32 	%r39, %r596, %r592;
	sub.s32 	%r40, %r592, %r596;
	add.s32 	%r41, %r597, %r593;
	sub.s32 	%r42, %r593, %r597;
	mov.u64 	%rd136, %rd16;
	mov.u32 	%r647, %r444;
LBB0_9:                                 // %L4327
                                        //   Parent Loop BB0_4 Depth=1
                                        //     Parent Loop BB0_5 Depth=2
                                        //       Parent Loop BB0_8 Depth=3
                                        // =>      This Inner Loop Header: Depth=4
	ld.global.u32 	%r598, [%rd136+-256];
	ld.global.u32 	%r599, [%rd136+-128];
	ld.global.u32 	%r600, [%rd136];
	ld.global.u32 	%r601, [%rd136+128];
	wmma.mma.sync.aligned.row.col.m16n16k16.s32.s8.s8.s32
		{%r603, %r604, %r605, %r606, %r607, %r608, %r609, %r610},
		{%r598, %r599},
		{%r35, %r37},
		{%r444, %r444, %r444, %r444, %r444, %r444, %r444, %r444};
	cvt.rn.f32.s32 	%f1, %r603;
	cvt.rn.f32.s32 	%f2, %r604;
	cvt.rn.f32.s32 	%f3, %r605;
	cvt.rn.f32.s32 	%f4, %r606;
	cvt.rn.f32.s32 	%f5, %r607;
	cvt.rn.f32.s32 	%f6, %r608;
	cvt.rn.f32.s32 	%f7, %r609;
	cvt.rn.f32.s32 	%f8, %r610;
	wmma.mma.sync.aligned.row.col.m16n16k16.s32.s8.s8.s32
		{%r611, %r612, %r613, %r614, %r615, %r616, %r617, %r618},
		{%r598, %r599},
		{%r39, %r41},
		{%r444, %r444, %r444, %r444, %r444, %r444, %r444, %r444};
	cvt.rn.f32.s32 	%f9, %r611;
	cvt.rn.f32.s32 	%f10, %r612;
	cvt.rn.f32.s32 	%f11, %r613;
	cvt.rn.f32.s32 	%f12, %r614;
	cvt.rn.f32.s32 	%f13, %r615;
	cvt.rn.f32.s32 	%f14, %r616;
	cvt.rn.f32.s32 	%f15, %r617;
	cvt.rn.f32.s32 	%f16, %r618;
	wmma.mma.sync.aligned.row.col.m16n16k16.s32.s8.s8.s32
		{%r619, %r620, %r621, %r622, %r623, %r624, %r625, %r626},
		{%r600, %r601},
		{%r40, %r42},
		{%r444, %r444, %r444, %r444, %r444, %r444, %r444, %r444};
	cvt.rn.f32.s32 	%f17, %r619;
	cvt.rn.f32.s32 	%f18, %r620;
	cvt.rn.f32.s32 	%f19, %r621;
	cvt.rn.f32.s32 	%f20, %r622;
	cvt.rn.f32.s32 	%f21, %r623;
	cvt.rn.f32.s32 	%f22, %r624;
	cvt.rn.f32.s32 	%f23, %r625;
	cvt.rn.f32.s32 	%f24, %r626;
	wmma.mma.sync.aligned.row.col.m16n16k16.s32.s8.s8.s32
		{%r627, %r628, %r629, %r630, %r631, %r632, %r633, %r634},
		{%r600, %r601},
		{%r36, %r38},
		{%r444, %r444, %r444, %r444, %r444, %r444, %r444, %r444};
	cvt.rn.f32.s32 	%f25, %r627;
	cvt.rn.f32.s32 	%f26, %r628;
	cvt.rn.f32.s32 	%f27, %r629;
	cvt.rn.f32.s32 	%f28, %r630;
	cvt.rn.f32.s32 	%f29, %r631;
	cvt.rn.f32.s32 	%f30, %r632;
	cvt.rn.f32.s32 	%f31, %r633;
	cvt.rn.f32.s32 	%f32, %r634;
	sub.f32 	%f33, %f1, %f17;
	add.f32 	%f34, %f1, %f17;
	sub.f32 	%f35, %f2, %f18;
	add.f32 	%f36, %f2, %f18;
	sub.f32 	%f37, %f3, %f19;
	add.f32 	%f38, %f3, %f19;
	sub.f32 	%f39, %f4, %f20;
	add.f32 	%f40, %f4, %f20;
	sub.f32 	%f41, %f5, %f21;
	add.f32 	%f42, %f5, %f21;
	sub.f32 	%f43, %f6, %f22;
	add.f32 	%f44, %f6, %f22;
	sub.f32 	%f45, %f7, %f23;
	add.f32 	%f46, %f7, %f23;
	sub.f32 	%f47, %f8, %f24;
	add.f32 	%f48, %f8, %f24;
	add.f32 	%f49, %f9, %f25;
	sub.f32 	%f50, %f9, %f25;
	add.f32 	%f51, %f10, %f26;
	sub.f32 	%f52, %f10, %f26;
	add.f32 	%f53, %f11, %f27;
	sub.f32 	%f54, %f11, %f27;
	add.f32 	%f55, %f12, %f28;
	sub.f32 	%f56, %f12, %f28;
	add.f32 	%f57, %f13, %f29;
	sub.f32 	%f58, %f13, %f29;
	add.f32 	%f59, %f14, %f30;
	sub.f32 	%f60, %f14, %f30;
	add.f32 	%f61, %f15, %f31;
	sub.f32 	%f62, %f15, %f31;
	add.f32 	%f63, %f16, %f32;
	sub.f32 	%f64, %f16, %f32;
	mul.f32 	%f65, %f49, %f49;
	mul.f32 	%f66, %f51, %f51;
	mul.f32 	%f67, %f53, %f53;
	mul.f32 	%f68, %f55, %f55;
	mul.f32 	%f69, %f57, %f57;
	mul.f32 	%f70, %f59, %f59;
	mul.f32 	%f71, %f61, %f61;
	mul.f32 	%f72, %f63, %f63;
	mul.f32 	%f73, %f50, %f50;
	mul.f32 	%f74, %f52, %f52;
	mul.f32 	%f75, %f54, %f54;
	mul.f32 	%f76, %f56, %f56;
	mul.f32 	%f77, %f58, %f58;
	mul.f32 	%f78, %f60, %f60;
	mul.f32 	%f79, %f62, %f62;
	mul.f32 	%f80, %f64, %f64;
	fma.rn.f32 	%f81, %f33, %f33, %f65;
	fma.rn.f32 	%f82, %f35, %f35, %f66;
	fma.rn.f32 	%f83, %f37, %f37, %f67;
	fma.rn.f32 	%f84, %f39, %f39, %f68;
	fma.rn.f32 	%f85, %f41, %f41, %f69;
	fma.rn.f32 	%f86, %f43, %f43, %f70;
	fma.rn.f32 	%f87, %f45, %f45, %f71;
	fma.rn.f32 	%f88, %f47, %f47, %f72;
	fma.rn.f32 	%f89, %f34, %f34, %f73;
	fma.rn.f32 	%f90, %f36, %f36, %f74;
	fma.rn.f32 	%f91, %f38, %f38, %f75;
	fma.rn.f32 	%f92, %f40, %f40, %f76;
	fma.rn.f32 	%f93, %f42, %f42, %f77;
	fma.rn.f32 	%f94, %f44, %f44, %f78;
	fma.rn.f32 	%f95, %f46, %f46, %f79;
	fma.rn.f32 	%f96, %f48, %f48, %f80;
	add.f32 	%f97, %f81, %f82;
	add.f32 	%f98, %f83, %f84;
	add.f32 	%f99, %f85, %f86;
	add.f32 	%f100, %f87, %f88;
	add.f32 	%f101, %f89, %f90;
	add.f32 	%f102, %f91, %f92;
	add.f32 	%f103, %f93, %f94;
	add.f32 	%f104, %f95, %f96;
	add.f32 	%f105, %f97, %f99;
	add.f32 	%f106, %f98, %f100;
	add.f32 	%f107, %f101, %f103;
	add.f32 	%f108, %f102, %f104;
	selp.f32 	%f109, %f107, %f105, %p39;
	mov.b32 	%r635, %f109;
	shfl.sync.bfly.b32	%r636, %r635, 2, 31, -1;
	mov.b32 	%f110, %r636;
	selp.f32 	%f111, %f110, %f107, %p39;
	selp.f32 	%f112, %f105, %f110, %p39;
	selp.f32 	%f113, %f108, %f106, %p39;
	mov.b32 	%r637, %f113;
	shfl.sync.bfly.b32	%r638, %r637, 2, 31, -1;
	mov.b32 	%f114, %r638;
	selp.f32 	%f115, %f114, %f108, %p39;
	selp.f32 	%f116, %f106, %f114, %p39;
	add.f32 	%f117, %f112, %f111;
	add.f32 	%f118, %f116, %f115;
	selp.f32 	%f119, %f118, %f117, %p38;
	mov.b32 	%r639, %f119;
	shfl.sync.bfly.b32	%r640, %r639, 1, 31, -1;
	mov.b32 	%f120, %r640;
	selp.f32 	%f121, %f120, %f118, %p38;
	selp.f32 	%f122, %f117, %f120, %p38;
	add.f32 	%f123, %f122, %f121;
	add.s32 	%r641, %r645, %r647;
	mul.wide.s32 	%rd133, %r641, 4;
	add.s64 	%rd134, %rd6, %rd133;
	ld.global.f32 	%f124, [%rd134];
	add.f32 	%f125, %f124, %f123;
	st.global.f32 	[%rd134], %f125;
	add.s32 	%r647, %r647, 1024;
	add.s64 	%rd136, %rd136, 512;
	setp.ne.s32 	%p40, %r647, 3072;
	@%p40 bra 	LBB0_9;
// %bb.10:                              // %L4870
                                        //   in Loop: Header=BB0_8 Depth=3
	add.s32 	%r45, %r646, 1;
	add.s32 	%r645, %r645, 4096;
	setp.ne.s32 	%p41, %r646, 2;
	mov.u32 	%r646, %r45;
	@%p41 bra 	LBB0_8;
// %bb.11:                              // %L4881
                                        //   in Loop: Header=BB0_5 Depth=2
	add.s32 	%r47, %r644, 1;
	setp.ne.s32 	%p42, %r644, 15;
	mov.u32 	%r644, %r47;
	@%p42 bra 	LBB0_5;
// %bb.12:                              // %L4892
                                        //   in Loop: Header=BB0_4 Depth=1
	add.s32 	%r48, %r643, 1;
	add.s32 	%r642, %r642, 2097152;
	setp.ne.s32 	%p43, %r643, 255;
	mov.u32 	%r643, %r48;
	@%p43 bra 	LBB0_4;
// %bb.13:                              // %L4903
	ret;
LBB0_1:                                 // %L11
	mov.u64 	%rd22, exception1;
	cvta.global.u64 	%rd23, %rd22;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd23;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
LBB0_14:                                // %L35
	mov.u64 	%rd24, exception1;
	cvta.global.u64 	%rd25, %rd24;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd25;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
  0.090992 seconds (97.25 k CPU allocations: 5.768 MiB)
